{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-list\"\n};\nconst _hoisted_2 = {\n  class: \"post__title\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"post__date\"\n};\nconst _hoisted_5 = {\n  class: \"post__description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_AuthorLink = _resolveComponent(\"AuthorLink\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ol\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.publishedPosts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"post\",\n      key: post.title\n    }, [_createElementVNode(\"span\", _hoisted_2, [_createVNode(_component_router_link, {\n      to: `/post/${post.slug}`\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(post.title) + \": \" + _toDisplayString(post.subtitle), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), $props.showAuthor ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, [_createTextVNode(\" by \"), _createVNode(_component_AuthorLink, {\n      author: post.author\n    }, null, 8 /* PROPS */, [\"author\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_4, _toDisplayString($options.displayableDate(post.publishDate)), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(post.metaDescription), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(post.tags, tag => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        class: \"post__tags\",\n        key: tag.name\n      }, [_createVNode(_component_router_link, {\n        to: `/tag/${tag.name}`\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"#\" + _toDisplayString(tag.name), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_Fragment","_renderList","$options","publishedPosts","post","key","title","_hoisted_2","_createVNode","_component_router_link","to","slug","_toDisplayString","subtitle","$props","showAuthor","_hoisted_3","_component_AuthorLink","author","_hoisted_4","displayableDate","publishDate","_hoisted_5","metaDescription","tags","tag","name"],"sources":["/Users/sarah.murray/Code/django-vue-graphql/frontend/src/components/PostList.vue"],"sourcesContent":["<script>\nimport AuthorLink from '@/components/AuthorLink'\n\nexport default {\n  name: 'PostList',\n  components: {\n    AuthorLink\n  },\n  props: {\n    posts: {\n      type: Array,\n      required: true,\n    },\n    showAuthor: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  computed: {\n    publishedPosts() {\n      return this.posts.filter(post => post.published)\n    }\n  },\n  methods: {\n    displayableDate(date) {\n      return new Intl.DateTimeFormat(\n        'en-US',\n        { dateStyle: 'full' }\n      ).format(new Date(date))\n    }\n  },\n}\n</script>\n\n<template>\n  <div>\n    <ol class=\"post-list\">\n      <li class=\"post\" v-for=\"post in publishedPosts\" :key=\"post.title\">\n        <span class=\"post__title\">\n          <router-link :to=\"`/post/${post.slug}`\">\n            {{ post.title }}: {{ post.subtitle }}\n          </router-link>\n        </span>\n        <span v-if=\"showAuthor\">\n          by <AuthorLink :author=\"post.author\" />\n        </span>\n        <div class=\"post__date\">{{ displayableDate(post.publishDate) }}</div>\n        <p class=\"post__description\">{{ post.metaDescription }}</p>\n        <ul>\n          <li class=\"post__tags\" v-for=\"tag in post.tags\" :key=\"tag.name\">\n            <router-link :to=\"`/tag/${tag.name}`\">#{{ tag.name }}</router-link>\n          </li>\n        </ul>\n      </li>\n    </ol>\n  </div>\n</template>\n\n<style>\n.post-list {\n  list-style: none;\n}\n\n.post {\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 1rem;\n}\n\n.post__title {\n  font-size: 1.25rem;\n}\n\n.post__description {\n  color: #777;\n  font-style: italic;\n}\n\n.post__tags {\n  list-style: none;\n  font-weight: bold;\n  font-size: 0.8125rem;\n}\n</style>"],"mappings":";;EAqCQA,KAAK,EAAC;AAAW;;EAEXA,KAAK,EAAC;AAAa;;;;;EAQpBA,KAAK,EAAC;AAAY;;EACpBA,KAAK,EAAC;AAAmB;;;;uBAZlCC,mBAAA,CAoBM,cAnBJC,mBAAA,CAkBK,MAlBLC,UAkBK,I,kBAjBHF,mBAAA,CAgBKG,SAAA,QAAAC,WAAA,CAhB2BC,QAAA,CAAAC,cAAc,EAAtBC,IAAI;yBAA5BP,mBAAA,CAgBK;MAhBDD,KAAK,EAAC,MAAM;MAAiCS,GAAG,EAAED,IAAI,CAACE;QACzDR,mBAAA,CAIO,QAJPS,UAIO,GAHLC,YAAA,CAEcC,sBAAA;MAFAC,EAAE,WAAWN,IAAI,CAACO,IAAI;;wBAClC,MAAgB,C,kCAAbP,IAAI,CAACE,KAAK,IAAG,IAAE,GAAAM,gBAAA,CAAGR,IAAI,CAACS,QAAQ,iB;;;mDAG1BC,MAAA,CAAAC,UAAU,I,cAAtBlB,mBAAA,CAEO,QAAAmB,UAAA,G,iBAFiB,MACnB,GAAAR,YAAA,CAAoCS,qBAAA;MAAvBC,MAAM,EAAEd,IAAI,CAACc;gFAE/BpB,mBAAA,CAAqE,OAArEqB,UAAqE,EAAAP,gBAAA,CAA1CV,QAAA,CAAAkB,eAAe,CAAChB,IAAI,CAACiB,WAAW,mBAC3DvB,mBAAA,CAA2D,KAA3DwB,UAA2D,EAAAV,gBAAA,CAA3BR,IAAI,CAACmB,eAAe,kBACpDzB,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKG,SAAA,QAAAC,WAAA,CAFgCG,IAAI,CAACoB,IAAI,EAAhBC,GAAG;2BAAjC5B,mBAAA,CAEK;QAFDD,KAAK,EAAC,YAAY;QAA2BS,GAAG,EAAEoB,GAAG,CAACC;UACxDlB,YAAA,CAAmEC,sBAAA;QAArDC,EAAE,UAAUe,GAAG,CAACC,IAAI;;0BAAI,MAAC,C,iBAAD,GAAC,GAAAd,gBAAA,CAAGa,GAAG,CAACC,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}